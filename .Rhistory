Y <- stack(blank,blank); ticker <- 2
while(ticker < (tau*12+1)) {
Y <- stack(Y,blank)
ticker <- ticker + 1
}
S <- Y
I <- Y
i=1
pT <- exp(-1/(-4.4+1.31*T-0.03*T^2))
dT <- (pT-Tmin)/12
M <- 1 + M*pT
for (k in 2:length(S)) {
S[[k]] <- S[[k-1]] + dT
}
plot(S)
dT
T <- temps[[i]]
pT <- exp(-1/(-4.4+1.31*T-0.03*T^2))
dT <- (T-Tmin)/12
M <- 1 + M*pT
plot(dt)
plot(dT)
pT <- blank
dT <- blank
M <- blank
Z <- blank
Y <- stack(blank,blank); ticker <- 2
while(ticker < (tau*12+1)) {
Y <- stack(Y,blank)
ticker <- ticker + 1
}
S <- Y
I <- Y
pT <- exp(-1/(-4.4+1.31*T-0.03*T^2))
dT <- (T-Tmin)/12
M <- 1 + M*
pt
M <- 1 + M*pT
for (k in 2:length(S)) {
S[[k]] <- S[[k-1]] + dT
}
plot(S)
for (k in 1:(length(I)-1)) {
I[[k]] <- 1-sign(sign(S[[k+1]]-phi)+1)
}
plot(I)
plot(S)
T <- temps[[i]]
pT <- exp(-1/(-4.4+1.31*T-0.03*T^2))
dT <- (T-Tmin)/12
M <- 1 + M*pT
for (k in length(S):2) {
S[[k]] <- S[[k-1]] + dT
}
length(S)
length(S):2
for (k in length(S):2) {
S[[k]] <- S[[k-1]] + dT
}
}S
S
length(S)
for (k in nlayers(S):2) {
S[[k]] <- S[[k-1]] + dT
}
plot(S)
Y <- stack(blank,blank); ticker <- 2
while(ticker < (tau*12+1)) {
Y <- stack(Y,blank)
ticker <- ticker + 1
}
S <- Y
I <- Y
for (k in nlayers(S):2) {
S[[k]] <- S[[k-1]] + dT
}
plot(S)
I[[k]] <- 1-sign(sign(S[[k+1]]-phi)+1)
plot(I)
sign(0)
plot(S)
for (k in 1:(length(I)-1)) {
I[[k]] <- 1-sign(sign(S[[k+1]]-phi)+1)
}
for (k in 1:(nlayers(I)-1)) {
I[[k]] <- 1-sign(sign(S[[k+1]]-phi)+1)
}
plot(I)
nlayer(I)
nlayesr(I)
nlayers(I)
plot(I[[37]])
for (k in 1:(nlayers(I)-1)) {
I[[k]] <- 1-sign(sign(S[[k]]-phi)+1)
}
Y[[1]] <- M
plot(Y)
Zstack <- stack()
Zdummy <- Y
for (k in 1:nlayers(Y)) {
Zdummy[[k]] <- Y[[k]]*pT*(1-I[[k]])
}
plot(Zdummy)
plot(sum(Zdummy))
temps <- stack(T,T)
ticker = 2
while(ticker < (365*12*2+1)) {
temps <- stack(temps,T)
ticker <- ticker + 1
}
temps <- stack(rep(temps,10))
temps <- stack(replicate(T,10))
replicate(T,10)
T
s <- stack(lapply(1:10, function(i) stack))
s <- stack(lapply(1:10, function(i) T))
plot(S)
temps <- stack(lapply(1:(365*12*2), function(i) T))
temps <- stack(lapply(1:20, function(i) T))
blank <- temps[[1]]*0
if(malaria=='Pf') {
phi <- 111
Tmin <- 16
}
if(malaria=='Pv') {
phi <-105
Tmin <- 14.5
}
if(malaria=='custom') {
phi <- phi
Tmin <- Tmin
}
# initiate the blank rasters
pT <- blank
dT <- blank
M <- blank
Z <- blank
# initiate blank raster stacks
Y <- stack(blank,blank); ticker <- 2
while(ticker < (tau*12+1)) {
Y <- stack(Y,blank)
ticker <- ticker + 1
}
S <- Y
I <- Y
Zdummy <- Y
nlayers(temps)
for (i in 1:20) {
T <- temps[[i]]
pT <- exp(-1/(-4.4+1.31*T-0.03*T^2))
dT <- (T-Tmin)/12
M <- 1 + M*pT
for (k in nlayers(S):2) {
S[[k]] <- S[[k-1]] + dT
}
for (k in 1:(nlayers(I)-1)) {
I[[k]] <- 1-sign(sign(S[[k]]-phi)+1)
}
Y[[1]] <- M
for (k in (length(Y)-1):1) {
Y[[k+1]] <- Y[[k]]*pT*I[[k]]
}
for (k in 1:nlayers(Y)) {
Zdummy[[k]] <- Y[[k]]*pT*(1-I[[k]])
}
Z <- Z*pT + sum(Zdummy)
}
T <- temps[[i]]
pT <- exp(-1/(-4.4+1.31*T-0.03*T^2))
dT <- (T-Tmin)/12
M <- 1 + M*pT
for (k in nlayers(S):2) {
S[[k]] <- S[[k-1]] + dT
}
for (k in 1:(nlayers(I)-1)) {
I[[k]] <- 1-sign(sign(S[[k]]-phi)+1)
}
Y[[1]] <- M
for (k in (nlayers(Y)-1):1) {
Y[[k+1]] <- Y[[k]]*pT*I[[k]]
}
for (k in 1:nlayers(Y)) {
Zdummy[[k]] <- Y[[k]]*pT*(1-I[[k]])
}
Z <- Z*pT + sum(Zdummy)
}
for (i in 1:20) {
T <- temps[[i]]
pT <- exp(-1/(-4.4+1.31*T-0.03*T^2))
dT <- (T-Tmin)/12
M <- 1 + M*pT
for (k in nlayers(S):2) {
S[[k]] <- S[[k-1]] + dT
}
for (k in 1:(nlayers(I)-1)) {
I[[k]] <- 1-sign(sign(S[[k]]-phi)+1)
}
Y[[1]] <- M
for (k in (nlayers(Y)-1):1) {
Y[[k+1]] <- Y[[k]]*pT*I[[k]]
}
for (k in 1:nlayers(Y)) {
Zdummy[[k]] <- Y[[k]]*pT*(1-I[[k]])
}
Z <- Z*pT + sum(Zdummy)
}
plot(Z)
plot(Y)
phi <-105
Tmin <- 14.5
plot(temp)
plot(temps)
temps <- temps + 6
plot(temps)
temps <- stack(temps,temps)
temps
for (i in 1:40) {
T <- temps[[i]]
pT <- exp(-1/(-4.4+1.31*T-0.03*T^2))
dT <- (T-Tmin)/12
M <- 1 + M*pT
for (k in nlayers(S):2) {
S[[k]] <- S[[k-1]] + dT
}
for (k in 1:(nlayers(I)-1)) {
I[[k]] <- 1-sign(sign(S[[k]]-phi)+1)
}
Y[[1]] <- M
for (k in (nlayers(Y)-1):1) {
Y[[k+1]] <- Y[[k]]*pT*I[[k]]
}
for (k in 1:nlayers(Y)) {
Zdummy[[k]] <- Y[[k]]*pT*(1-I[[k]])
}
Z <- Z*pT + sum(Zdummy)
}
plot(Z)
temps <- stack(lapply(1:(30*12), function(i) T))
blank <- temps[[1]]*0
if(malaria=='Pf') {
phi <- 111
Tmin <- 16
}
if(malaria=='Pv') {
phi <-105
Tmin <- 14.5
}
if(malaria=='custom') {
phi <- phi
Tmin <- Tmin
}
# initiate the blank rasters
pT <- blank
dT <- blank
M <- blank
Z <- blank
# initiate blank raster stacks
Y <- stack(blank,blank); ticker <- 2
while(ticker < (tau*12+1)) {
Y <- stack(Y,blank)
ticker <- ticker + 1
}
S <- Y
I <- Y
Zdummy <- Y
temps <- stack(lapply(1:(180*12), function(i) T))
#' Title
#' @description
#' Text
#'
#' @param value text
#'
#' @keywords text
#'
#' @import raster
gething <- function(temps,malaria,burnin=1,maxtime=1,tau=30,phi=NA,Tmin=NA) {
# What kind of malaria are we working with here?
# temps <- stack(lapply(1:(180*12), function(i) T))
blank <- temps[[1]]*0
if(malaria=='Pf') {
phi <- 111
Tmin <- 16
}
if(malaria=='Pv') {
phi <-105
Tmin <- 14.5
}
if(malaria=='custom') {
phi <- phi
Tmin <- Tmin
}
# initiate the blank rasters
pT <- blank
dT <- blank
M <- blank
Z <- blank
# initiate blank raster stacks
Y <- stack(blank,blank); ticker <- 2
while(ticker < (tau*12+1)) {
Y <- stack(Y,blank)
ticker <- ticker + 1
}
S <- Y
I <- Y
Zdummy <- Y
# This is the burn-in time loop
for (i in 1:(12*60*burnin)) {
T <- temps[[i]]
pT <- exp(-1/(-4.4+1.31*T-0.03*T^2))
dT <- (T-Tmin)/12
M <- 1 + M*pT
for (k in nlayers(S):2) {
S[[k]] <- S[[k-1]] + dT
}
for (k in 1:(nlayers(I)-1)) {
I[[k]] <- 1-sign(sign(S[[k]]-phi)+1)
}
Y[[1]] <- M
for (k in (nlayers(Y)-1):1) {
Y[[k+1]] <- Y[[k]]*pT*I[[k]]
}
for (k in 1:nlayers(Y)) {
Zdummy[[k]] <- Y[[k]]*pT*(1-I[[k]])
}
Z <- Z*pT + sum(Zdummy)
}
print("burn-in complete")
# This is the actual time loop
Zstack <- stack() # stores values
for (i in 1:(12*60*burnin)) {
T <- temps[[i]]
pT <- exp(-1/(-4.4+1.31*T-0.03*T^2))
dT <- (T-Tmin)/12
M <- 1 + M*pT
for (k in nlayers(S):2) {
S[[k]] <- S[[k-1]] + dT
}
for (k in 1:(nlayers(I)-1)) {
I[[k]] <- 1-sign(sign(S[[k]]-phi)+1)
}
Y[[1]] <- M
for (k in (length(Y)-1):1) {
Y[[k+1]] <- Y[[k]]*pT*I[[k]]
}
for (k in 1:nlayers(Y)) {
Zdummy[[k]] <- Y[[k]]*pT*(1-I[[k]])
}
Z <- Z*pT + sum(Zdummy)
Zstack <- stack(Zstack, Z)
}
return(Zstack)
}
temps <- stack(lapply(1:(180*12), function(i) T))
gething(temps,malaria='Pf')
results <-gething(temps,malaria='Pf')
gething <- function(temps,malaria,burnin=1,maxtime=1,tau=30,phi=NA,Tmin=NA) {
# What kind of malaria are we working with here?
# temps <- stack(lapply(1:(180*12), function(i) T))
blank <- temps[[1]]*0
if(malaria=='Pf') {
phi <- 111
Tmin <- 16
}
if(malaria=='Pv') {
phi <-105
Tmin <- 14.5
}
if(malaria=='custom') {
phi <- phi
Tmin <- Tmin
}
# initiate the blank rasters
pT <- blank
dT <- blank
M <- blank
Z <- blank
# initiate blank raster stacks
Y <- stack(blank,blank); ticker <- 2
while(ticker < (tau*12+1)) {
Y <- stack(Y,blank)
ticker <- ticker + 1
}
S <- Y
I <- Y
Zdummy <- Y
# This is the burn-in time loop
for (i in 1:(12*60*burnin)) {
T <- temps[[i]]
pT <- exp(-1/(-4.4+1.31*T-0.03*T^2))
dT <- (T-Tmin)/12
M <- 1 + M*pT
for (k in nlayers(S):2) {
S[[k]] <- S[[k-1]] + dT
}
for (k in 1:(nlayers(I)-1)) {
I[[k]] <- 1-sign(sign(S[[k]]-phi)+1)
}
Y[[1]] <- M
for (k in (nlayers(Y)-1):1) {
Y[[k+1]] <- Y[[k]]*pT*I[[k]]
}
for (k in 1:nlayers(Y)) {
Zdummy[[k]] <- Y[[k]]*pT*(1-I[[k]])
}
Z <- Z*pT + sum(Zdummy)
print(i)
plot(Z)
}
print("burn-in complete")
# This is the actual time loop
Zstack <- stack() # stores values
for (i in 1:(12*60*burnin)) {
T <- temps[[i]]
pT <- exp(-1/(-4.4+1.31*T-0.03*T^2))
dT <- (T-Tmin)/12
M <- 1 + M*pT
for (k in nlayers(S):2) {
S[[k]] <- S[[k-1]] + dT
}
for (k in 1:(nlayers(I)-1)) {
I[[k]] <- 1-sign(sign(S[[k]]-phi)+1)
}
Y[[1]] <- M
for (k in (length(Y)-1):1) {
Y[[k+1]] <- Y[[k]]*pT*I[[k]]
}
for (k in 1:nlayers(Y)) {
Zdummy[[k]] <- Y[[k]]*pT*(1-I[[k]])
}
Z <- Z*pT + sum(Zdummy)
Zstack <- stack(Zstack, Z)
}
return(Zstack)
}
results <-gething(temps,malaria='Pf')
Y <- stack(lapply(1:(tau*12), function(i) blank))
gething <- function(temps,malaria,burnin=1,maxtime=1,tau=30,phi=NA,Tmin=NA) {
# What kind of malaria are we working with here?
# temps <- stack(lapply(1:(180*12), function(i) T))
blank <- temps[[1]]*0
if(malaria=='Pf') {
phi <- 111
Tmin <- 16
}
if(malaria=='Pv') {
phi <-105
Tmin <- 14.5
}
if(malaria=='custom') {
phi <- phi
Tmin <- Tmin
}
# initiate the blank rasters
pT <- blank
dT <- blank
M <- blank
Z <- blank
# initiate blank raster stacks
Y <- stack(lapply(1:(tau*12), function(i) blank))
S <- Y
I <- Y
Zdummy <- Y
# This is the burn-in time loop
for (i in 1:(12*60*burnin)) {
T <- temps[[i]]
pT <- exp(-1/(-4.4+1.31*T-0.03*T^2))
dT <- (T-Tmin)/12
M <- 1 + M*pT
for (k in nlayers(S):2) {
S[[k]] <- S[[k-1]] + dT
}
for (k in 1:(nlayers(I)-1)) {
I[[k]] <- 1-sign(sign(S[[k]]-phi)+1)
}
Y[[1]] <- M
for (k in (nlayers(Y)-1):1) {
Y[[k+1]] <- Y[[k]]*pT*I[[k]]
}
for (k in 1:nlayers(Y)) {
Zdummy[[k]] <- Y[[k]]*pT*(1-I[[k]])
}
Z <- Z*pT + sum(Zdummy)
print(i)
plot(Z)
}
print("burn-in complete")
# This is the actual time loop
Zstack <- stack() # stores values
for (i in 1:(12*60*burnin)) {
T <- temps[[i]]
pT <- exp(-1/(-4.4+1.31*T-0.03*T^2))
dT <- (T-Tmin)/12
M <- 1 + M*pT
for (k in nlayers(S):2) {
S[[k]] <- S[[k-1]] + dT
}
for (k in 1:(nlayers(I)-1)) {
I[[k]] <- 1-sign(sign(S[[k]]-phi)+1)
}
Y[[1]] <- M
for (k in (length(Y)-1):1) {
Y[[k+1]] <- Y[[k]]*pT*I[[k]]
}
for (k in 1:nlayers(Y)) {
Zdummy[[k]] <- Y[[k]]*pT*(1-I[[k]])
}
Z <- Z*pT + sum(Zdummy)
Zstack <- stack(Zstack, Z)
}
return(Zstack)
}
results <-gething(temps,malaria='Pf')
